entity Pays {
	nom String required
}

entity Ville {
	nom String required
}

entity Commune {
	nom String required
}

enum Genre {
    Masculin, FÃ©minin
  }

entity Personne {
	nom String required,
    prenom String required,
    dateNaissance LocalDate required,
    fonction String,
    genre Genre,
    numeroCarteIdentite String,
    numeroPassport String,
    paysNaissance String required,
    villeNaissance String required,
    paysResidence String required,
    villeResidence String required
}

entity Extrait {
	numeroRegistre String required,
    mention TextBlob maxbytes(1000) required,
    dateDeclaration LocalDate required,
    validated Boolean
}

entity PieceJointe {
    copieLiterale AnyBlob minbytes(8192) maxbytes(25165824) required,
    copieCarte   AnyBlob minbytes(8192) maxbytes(25165824) required
}

entity RegistreNaissance {
    numero Integer min(0001) max(9999) required,
    anneeRegistre   LocalDate required
}

entity DeclarationExtrait {
    copieLiterale AnyBlob minbytes(8192) maxbytes(25165824) required,
    copieCarte   AnyBlob minbytes(8192) maxbytes(25165824) required,
    mention TextBlob maxbytes(1000) required,
    nomEnfant String required,
    prenomEnfant String required,
    dateNaissanceEnfant LocalDate required,
    genreEnfant Genre,
    nomMere String required,
    prenomMere String required,
    dateNaissanceMere LocalDate required,
    fonctionMere String,
    adresseComplMere String,
    numeroIdentiteMere String,
    numeroPassportMere String,
    nomPere String required,
    prenomPere String required,
    dateNaissancePere LocalDate required,
    adresseComplPere String,
    fonctionPere String,
    numeroIdentitePere String,
    numeroPassportPere String,
    paysNaissanceEnfant String required,
    villeNaissanceEnfant String required,
    paysNaissanceMere String required,
    villeNaissanceMere String required,
    paysResidenceMere String required,
    villeResidenceMere String required,
    paysNaissancePere String required,
    villeNaissancePere String required,
    paysResidencePere String required,
    villeResidencePere String required

}

skipServer for DeclarationExtrait

relationship ManyToOne {
  Personne{adresse required} to Ville,
  Personne{pere} to Personne,
  Personne{mere} to Personne,
  Personne{lieuNaissance required} to Ville,
  DeclarationExtrait{paysNaissanceEnfant required} to Pays,
  DeclarationExtrait{villeNaissanceEnfant required} to Ville,
  DeclarationExtrait{PaysDeclaration required} to Pays,
  DeclarationExtrait{lieuDeclaration required} to Ville,
  Commune{ville required} to Ville,
  Ville{pays} to Pays,
  Extrait{lieuDeclaration required} to Ville,
  Extrait{enfant required} to Personne,
  Extrait{mere required} to Personne,
  Extrait{pere required} to Personne,
  Extrait{agent required} to User,
  RegistreNaissance{extrait required} to Extrait,
  PieceJointe{declaration required} to Extrait{piecesJointes}
}

dto * with mapstruct
service * with serviceImpl
